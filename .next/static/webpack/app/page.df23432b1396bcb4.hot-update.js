"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/dynamic-color.ts":
/*!******************************!*\
  !*** ./lib/dynamic-color.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyTheme: function() { return /* binding */ applyTheme; },\n/* harmony export */   clearInlineSurfaces: function() { return /* binding */ clearInlineSurfaces; },\n/* harmony export */   getRandomMaterialColor: function() { return /* binding */ getRandomMaterialColor; },\n/* harmony export */   seedDynamicTheme: function() { return /* binding */ seedDynamicTheme; }\n/* harmony export */ });\n/* harmony import */ var tinycolor2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tinycolor2 */ \"(app-pages-browser)/./node_modules/tinycolor2/esm/tinycolor.js\");\n// lib/dynamic-color.ts\n\nfunction ensureVibrant(c) {\n    const hsl = c.toHsl();\n    if (hsl.s < 0.3) {\n        const boost = Math.min(100, Math.round((0.3 - hsl.s) * 100) + 10);\n        return c.clone().saturate(boost);\n    }\n    return c;\n}\nfunction seedDynamicTheme(seed) {\n    const base = (0,tinycolor2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(seed);\n    const adjusted = ensureVibrant(base);\n    const primary = adjusted.toHexString();\n    const onPrimary = adjusted.isDark() ? \"#ffffff\" : \"#000000\";\n    const secondary = adjusted.clone().spin(30).desaturate(10).toHexString();\n    const tertiary = adjusted.clone().spin(-30).desaturate(5).toHexString();\n    const surface = tinycolor2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mix(\"#ffffff\", adjusted, 4).toHexString();\n    const surfaceContainer = tinycolor2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mix(surface, adjusted, 8).toHexString();\n    const surfaceContainerHigh = tinycolor2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mix(surface, adjusted, 12).toHexString();\n    const onSurface = tinycolor2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mostReadable(surface, [\n        \"#0d0f12\",\n        \"#e8eaf0\"\n    ], {\n        includeFallbackColors: true\n    }).toHexString();\n    const outline = tinycolor2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mix(onSurface, primary, 50).desaturate(20).toHexString();\n    return {\n        primary,\n        onPrimary,\n        secondary,\n        tertiary,\n        surface,\n        onSurface,\n        outline,\n        surfaceContainer,\n        surfaceContainerHigh\n    };\n}\n/**\n * Apply seeded tokens.\n * - Always set chroma tokens (primary/secondary/tertiary/outline).\n * - Only set surface tokens in light mode so CSS [data-theme=\"dark\"] can override surfaces.\n */ function applyTheme(c) {\n    const root = document.documentElement;\n    const style = root.style;\n    const isDark = root.getAttribute(\"data-theme\") === \"dark\";\n    // Chroma tokens (safe to set in both modes)\n    style.setProperty(\"--m3-primary\", c.primary);\n    style.setProperty(\"--m3-on-primary\", c.onPrimary);\n    style.setProperty(\"--m3-secondary\", c.secondary);\n    style.setProperty(\"--m3-tertiary\", c.tertiary);\n    style.setProperty(\"--m3-outline\", c.outline);\n    if (isDark) {\n        // Let CSS dark variables define surfaces; remove any stale inline values.\n        style.removeProperty(\"--m3-surface\");\n        style.removeProperty(\"--m3-on-surface\");\n        style.removeProperty(\"--m3-surface-container\");\n        style.removeProperty(\"--m3-surface-container-high\");\n    } else {\n        // Set surfaces only for light mode\n        style.setProperty(\"--m3-surface\", c.surface);\n        style.setProperty(\"--m3-on-surface\", c.onSurface);\n        style.setProperty(\"--m3-surface-container\", c.surfaceContainer);\n        style.setProperty(\"--m3-surface-container-high\", c.surfaceContainerHigh);\n    }\n}\n/** Optional helper to force-clear inline surfaces (can be called on theme change) */ function clearInlineSurfaces() {\n    const s = document.documentElement.style;\n    s.removeProperty(\"--m3-surface\");\n    s.removeProperty(\"--m3-on-surface\");\n    s.removeProperty(\"--m3-surface-container\");\n    s.removeProperty(\"--m3-surface-container-high\");\n}\nfunction getRandomMaterialColor() {\n    const palette = [\n        \"#6750a4\",\n        \"#7c4dff\",\n        \"#2196f3\",\n        \"#03dac6\",\n        \"#4caf50\",\n        \"#8bc34a\",\n        \"#ff9800\",\n        \"#ff5722\",\n        \"#e91e63\",\n        \"#9c27b0\",\n        \"#673ab7\",\n        \"#3f51b5\"\n    ];\n    return palette[Math.floor(Math.random() * palette.length)];\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/dynamic-color.ts\n"));

/***/ })

});